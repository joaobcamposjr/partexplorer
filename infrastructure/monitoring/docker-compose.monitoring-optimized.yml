version: '3.8'

services:
  # Prometheus - Otimizado para VPS pequena
  prometheus:
    image: prom/prometheus:latest
    container_name: partexplorer-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'  # Reduzido para 7 dias
      - '--storage.tsdb.retention.size=5GB' # Limite de 5GB
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
    networks:
      - partexplorer-network
      - monitoring-network

  # Grafana - Otimizado
  grafana:
    image: grafana/grafana:latest
    container_name: partexplorer-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SMTP_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
    networks:
      - partexplorer-network
      - monitoring-network

  # Loki - Otimizado com compress√£o
  loki:
    image: grafana/loki:latest
    container_name: partexplorer-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: 
      - -config.file=/etc/loki/local-config.yaml
      - -log.level=warn
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
    networks:
      - partexplorer-network
      - monitoring-network

  # Promtail - Otimizado
  promtail:
    image: grafana/promtail:latest
    container_name: partexplorer-promtail
    restart: unless-stopped
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    networks:
      - partexplorer-network
      - monitoring-network

  # Nginx Exporter - Leve
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: partexplorer-nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://nginx/nginx_status
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.05'
    networks:
      - partexplorer-network
      - monitoring-network

  # Node Exporter - Leve
  node-exporter:
    image: prom/node-exporter:latest
    container_name: partexplorer-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.disable-defaults'
      - '--collectors.enabled=filesystem,loadavg,meminfo,diskstats,netdev,uname,textfile'
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.05'
    networks:
      - partexplorer-network
      - monitoring-network

  # cAdvisor - Otimizado
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: partexplorer-cadvisor
    restart: unless-stopped
    ports:
      - "8088:8080"
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - '--logtostderr'
      - '--housekeeping_interval=30s'
      - '--max_housekeeping_interval=60s'
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    networks:
      - partexplorer-network
      - monitoring-network

  # Alertmanager - Leve
  alertmanager:
    image: prom/alertmanager:latest
    container_name: partexplorer-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=warn'
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.05'
    networks:
      - partexplorer-network
      - monitoring-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  partexplorer-network:
    external: true
  monitoring-network:
    driver: bridge
