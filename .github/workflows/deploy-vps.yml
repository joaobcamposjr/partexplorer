name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Backend Image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        load: true
        tags: partexplorer-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build Frontend Image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        load: true
        tags: partexplorer-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Save Backend Image
      uses: actions/upload-artifact@v4
      with:
        name: backend-image
        path: /tmp/backend.tar
        retention-days: 1
        
    - name: Save Frontend Image
      uses: actions/upload-artifact@v4
      with:
        name: frontend-image
        path: /tmp/frontend.tar
        retention-days: 1
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Criar diretório se não existir
          mkdir -p /opt/partexplorer
          cd /opt/partexplorer
          
          # Parar containers existentes
          docker-compose down || true
          
          # Fazer backup do banco (se existir)
          docker exec partexplorer-postgres pg_dump -U $DB_USER $DB_NAME > backup_$(date +%Y%m%d_%H%M%S).sql || true
          
          # Pull das imagens mais recentes
          docker pull ${{ secrets.DOCKER_REGISTRY }}/partexplorer-backend:latest
          docker pull ${{ secrets.DOCKER_REGISTRY }}/partexplorer-frontend:latest
          
          # Subir novos containers
          docker-compose up -d
          
          # Verificar saúde dos serviços
          sleep 30
          docker-compose ps
          
          # Limpar imagens antigas
          docker image prune -f 