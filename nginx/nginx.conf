events {
    worker_connections 1024;
}

http {
    # Logging format para métricas
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'geoip_country="$http_cf_ipcountry" geoip_city="$http_cf_ipcity"';

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstreams
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8080;
    }

    # GeoIP (se disponível)
    geo $geoip_country_code {
        default US;
        127.0.0.1 BR;
    }

    server {
        listen 80;
        server_name localhost;

        # Logs
        access_log /var/log/nginx/access.log main_ext;
        error_log /var/log/nginx/error.log;

        # Nginx status para monitoramento
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;
        }

        # Frontend com rate limiting
        location / {
            limit_req zone=general burst=20 nodelay;
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Headers para métricas
            proxy_set_header X-Forwarded-Country $geoip_country_code;
            proxy_set_header X-Forwarded-User-Agent $http_user_agent;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Backend API com rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Headers para métricas
            proxy_set_header X-Forwarded-Country $geoip_country_code;
            proxy_set_header X-Forwarded-User-Agent $http_user_agent;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }

        # Métricas do nginx para Prometheus
        location /metrics {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;
        }
    }
} 